
pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000005be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000054a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  000005be  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005be  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000005f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  0000062c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001451  00000000  00000000  0000067c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008b3  00000000  00000000  00001acd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006f9  00000000  00000000  00002380  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000084  00000000  00000000  00002a7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000449  00000000  00000000  00002b00  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000594  00000000  00000000  00002f49  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  000034dd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	5a c0       	rjmp	.+180    	; 0xb6 <__ctors_end>
   2:	00 00       	nop
   4:	68 c0       	rjmp	.+208    	; 0xd6 <__bad_interrupt>
   6:	00 00       	nop
   8:	66 c0       	rjmp	.+204    	; 0xd6 <__bad_interrupt>
   a:	00 00       	nop
   c:	64 c0       	rjmp	.+200    	; 0xd6 <__bad_interrupt>
   e:	00 00       	nop
  10:	62 c0       	rjmp	.+196    	; 0xd6 <__bad_interrupt>
  12:	00 00       	nop
  14:	60 c0       	rjmp	.+192    	; 0xd6 <__bad_interrupt>
  16:	00 00       	nop
  18:	5e c0       	rjmp	.+188    	; 0xd6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5c c0       	rjmp	.+184    	; 0xd6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	5a c0       	rjmp	.+180    	; 0xd6 <__bad_interrupt>
  22:	00 00       	nop
  24:	58 c0       	rjmp	.+176    	; 0xd6 <__bad_interrupt>
  26:	00 00       	nop
  28:	56 c0       	rjmp	.+172    	; 0xd6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	54 c0       	rjmp	.+168    	; 0xd6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	52 c0       	rjmp	.+164    	; 0xd6 <__bad_interrupt>
  32:	00 00       	nop
  34:	50 c0       	rjmp	.+160    	; 0xd6 <__bad_interrupt>
  36:	00 00       	nop
  38:	4e c0       	rjmp	.+156    	; 0xd6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4c c0       	rjmp	.+152    	; 0xd6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	4a c0       	rjmp	.+148    	; 0xd6 <__bad_interrupt>
  42:	00 00       	nop
  44:	48 c0       	rjmp	.+144    	; 0xd6 <__bad_interrupt>
  46:	00 00       	nop
  48:	46 c0       	rjmp	.+140    	; 0xd6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	44 c0       	rjmp	.+136    	; 0xd6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	42 c0       	rjmp	.+132    	; 0xd6 <__bad_interrupt>
  52:	00 00       	nop
  54:	40 c0       	rjmp	.+128    	; 0xd6 <__bad_interrupt>
  56:	00 00       	nop
  58:	3e c0       	rjmp	.+124    	; 0xd6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3c c0       	rjmp	.+120    	; 0xd6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	3a c0       	rjmp	.+116    	; 0xd6 <__bad_interrupt>
  62:	00 00       	nop
  64:	38 c0       	rjmp	.+112    	; 0xd6 <__bad_interrupt>
  66:	00 00       	nop
  68:	36 c0       	rjmp	.+108    	; 0xd6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	34 c0       	rjmp	.+104    	; 0xd6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	32 c0       	rjmp	.+100    	; 0xd6 <__bad_interrupt>
  72:	00 00       	nop
  74:	30 c0       	rjmp	.+96     	; 0xd6 <__bad_interrupt>
  76:	00 00       	nop
  78:	2e c0       	rjmp	.+92     	; 0xd6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2c c0       	rjmp	.+88     	; 0xd6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	2a c0       	rjmp	.+84     	; 0xd6 <__bad_interrupt>
  82:	00 00       	nop
  84:	28 c0       	rjmp	.+80     	; 0xd6 <__bad_interrupt>
  86:	00 00       	nop
  88:	26 c0       	rjmp	.+76     	; 0xd6 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	e0 00       	.word	0x00e0	; ????
  8e:	d6 00       	.word	0x00d6	; ????
  90:	ea 00       	.word	0x00ea	; ????
  92:	f4 00       	.word	0x00f4	; ????
  94:	fe 00       	.word	0x00fe	; ????
  96:	08 01       	movw	r0, r16
  98:	12 01       	movw	r2, r4
  9a:	1c 01       	movw	r2, r24
  9c:	26 01       	movw	r4, r12
  9e:	30 01       	movw	r6, r0
  a0:	3a 01       	movw	r6, r20
  a2:	44 01       	movw	r8, r8
  a4:	4e 01       	movw	r8, r28
  a6:	58 01       	movw	r10, r16
  a8:	62 01       	movw	r12, r4
  aa:	66 01       	movw	r12, r12
  ac:	ca 01       	movw	r24, r20
  ae:	ce 01       	movw	r24, r28
  b0:	d2 01       	movw	r26, r4
  b2:	16 02       	muls	r17, r22
  b4:	5a 02       	muls	r21, r26

000000b6 <__ctors_end>:
  b6:	11 24       	eor	r1, r1
  b8:	1f be       	out	0x3f, r1	; 63
  ba:	cf ef       	ldi	r28, 0xFF	; 255
  bc:	d0 e1       	ldi	r29, 0x10	; 16
  be:	de bf       	out	0x3e, r29	; 62
  c0:	cd bf       	out	0x3d, r28	; 61

000000c2 <__do_clear_bss>:
  c2:	21 e0       	ldi	r18, 0x01	; 1
  c4:	a0 e0       	ldi	r26, 0x00	; 0
  c6:	b1 e0       	ldi	r27, 0x01	; 1
  c8:	01 c0       	rjmp	.+2      	; 0xcc <.do_clear_bss_start>

000000ca <.do_clear_bss_loop>:
  ca:	1d 92       	st	X+, r1

000000cc <.do_clear_bss_start>:
  cc:	a6 30       	cpi	r26, 0x06	; 6
  ce:	b2 07       	cpc	r27, r18
  d0:	e1 f7       	brne	.-8      	; 0xca <.do_clear_bss_loop>
  d2:	34 d0       	rcall	.+104    	; 0x13c <main>
  d4:	38 c2       	rjmp	.+1136   	; 0x546 <_exit>

000000d6 <__bad_interrupt>:
  d6:	94 cf       	rjmp	.-216    	; 0x0 <__vectors>

000000d8 <uart_init>:
#define FOSC 8000000UL                                 // define baud
#define ubrr 51
int q,i,j;
void uart_init (int baud)
{   // to establish uart 0
	UBRR0H = (unsigned char)(baud>>8);                      // shift the register right by 8 bits
  d8:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L =(unsigned char) baud;                           // set baud rate
  dc:	89 b9       	out	0x09, r24	; 9
	UCSR0B |= (1<<RXEN0)|(1<<TXEN0);                     // 4 rxen and 3 txen
  de:	8a b1       	in	r24, 0x0a	; 10
  e0:	88 61       	ori	r24, 0x18	; 24
  e2:	8a b9       	out	0x0a, r24	; 10
	// enable receiver and transmitter
	UCSR0C=0b10000110;         //stop bit 1 ,parity=None,bits=8
  e4:	86 e8       	ldi	r24, 0x86	; 134
  e6:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>
  ea:	08 95       	ret

000000ec <USART_Transmit>:

{

	/* Wait for empty transmit buffer */

	while ( !( UCSR0A & (1<<UDRE0)) );
  ec:	5d 9b       	sbis	0x0b, 5	; 11
  ee:	fe cf       	rjmp	.-4      	; 0xec <USART_Transmit>
		UDR0 = data;
  f0:	8c b9       	out	0x0c, r24	; 12
  f2:	08 95       	ret

000000f4 <USART_Receive>:

{

	/* Wait for data to be received */

	while ( !(UCSR0A & (1<<RXC0)) );
  f4:	5f 9b       	sbis	0x0b, 7	; 11
  f6:	fe cf       	rjmp	.-4      	; 0xf4 <USART_Receive>

	/* Get and return received data from buffer */

	return UDR0;
  f8:	8c b1       	in	r24, 0x0c	; 12
}
  fa:	08 95       	ret

000000fc <setval1C>:
void setval1C( int va)             
{	va=va*100;
  fc:	24 e6       	ldi	r18, 0x64	; 100
  fe:	ac 01       	movw	r20, r24
 100:	24 9f       	mul	r18, r20
 102:	c0 01       	movw	r24, r0
 104:	25 9f       	mul	r18, r21
 106:	90 0d       	add	r25, r0
 108:	11 24       	eor	r1, r1
	OCR1CH=(va>>8);
 10a:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
	OCR1CL=va;
 10e:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 112:	08 95       	ret

00000114 <setval1B>:
}
void setval1B( int va)
{	va=va*100;
 114:	24 e6       	ldi	r18, 0x64	; 100
 116:	ac 01       	movw	r20, r24
 118:	24 9f       	mul	r18, r20
 11a:	c0 01       	movw	r24, r0
 11c:	25 9f       	mul	r18, r21
 11e:	90 0d       	add	r25, r0
 120:	11 24       	eor	r1, r1
	OCR1BH=(va>>8);
 122:	99 bd       	out	0x29, r25	; 41
	OCR1BL=va;
 124:	88 bd       	out	0x28, r24	; 40
 126:	08 95       	ret

00000128 <setval1A>:
}
void setval1A( int va)
{	va=va*100;
 128:	24 e6       	ldi	r18, 0x64	; 100
 12a:	ac 01       	movw	r20, r24
 12c:	24 9f       	mul	r18, r20
 12e:	c0 01       	movw	r24, r0
 130:	25 9f       	mul	r18, r21
 132:	90 0d       	add	r25, r0
 134:	11 24       	eor	r1, r1
	OCR1AH=(va>>8);
 136:	9b bd       	out	0x2b, r25	; 43
	OCR1AL=va;
 138:	8a bd       	out	0x2a, r24	; 42
 13a:	08 95       	ret

0000013c <main>:
}
int main()
{
	char a;
	DDRB=0xFF;
 13c:	8f ef       	ldi	r24, 0xFF	; 255
 13e:	87 bb       	out	0x17, r24	; 23
	PORTB|=(1<<PINB5)|(1<<PINB6)|(1<<PINB7); //enabling pins OC1A,OC1B,OC1C
 140:	88 b3       	in	r24, 0x18	; 24
 142:	80 6e       	ori	r24, 0xE0	; 224
 144:	88 bb       	out	0x18, r24	; 24
	TCCR1A|=(1<<COM1A1)|(1<<WGM11)|(1<<COM1B1)|(1<<COM1C1); //COMC1  FOR FAST PWM
 146:	8f b5       	in	r24, 0x2f	; 47
 148:	8a 6a       	ori	r24, 0xAA	; 170
 14a:	8f bd       	out	0x2f, r24	; 47
	TCCR1B|=(1<<WGM12)|(1<<WGM13)|(1<<CS10);	// WGMx11-12-13 ARE FOR
 14c:	8e b5       	in	r24, 0x2e	; 46
 14e:	89 61       	ori	r24, 0x19	; 25
 150:	8e bd       	out	0x2e, r24	; 46
	ICR1=0x2710;	//SETTING UP TOP AT 10000
 152:	80 e1       	ldi	r24, 0x10	; 16
 154:	97 e2       	ldi	r25, 0x27	; 39
 156:	97 bd       	out	0x27, r25	; 39
 158:	86 bd       	out	0x26, r24	; 38
	uart_init(51);
 15a:	83 e3       	ldi	r24, 0x33	; 51
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	bc df       	rcall	.-136    	; 0xd8 <uart_init>
	char data;
	int j;
	//data=USART_Receive();
	//USART_Transmit(data);
	setval1C(0);
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	cb df       	rcall	.-106    	; 0xfc <setval1C>
	setval1B(0);
 166:	80 e0       	ldi	r24, 0x00	; 0
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	d4 df       	rcall	.-88     	; 0x114 <setval1B>
	setval1A(0);
 16c:	80 e0       	ldi	r24, 0x00	; 0
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	db df       	rcall	.-74     	; 0x128 <setval1A>

			case 'p': 
			 //dim to high
			 while(1) 
			{	j=1;
				for(i=5;i<=100;i+=5)
 172:	05 e0       	ldi	r16, 0x05	; 5
 174:	10 e0       	ldi	r17, 0x00	; 0
	setval1C(0);
	setval1B(0);
	setval1A(0);
	while(1)
	{    
		data=USART_Receive();
 176:	be df       	rcall	.-132    	; 0xf4 <USART_Receive>
 178:	c8 2f       	mov	r28, r24
 17a:	87 ea       	ldi	r24, 0xA7	; 167
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 17c:	91 e6       	ldi	r25, 0x61	; 97
 17e:	01 97       	sbiw	r24, 0x01	; 1
 180:	f1 f7       	brne	.-4      	; 0x17e <main+0x42>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0x48>
 184:	00 00       	nop
		_delay_ms(100);
		USART_Transmit(data);
 186:	8c 2f       	mov	r24, r28
 188:	b1 df       	rcall	.-158    	; 0xec <USART_Transmit>
 18a:	87 ea       	ldi	r24, 0xA7	; 167
 18c:	91 e6       	ldi	r25, 0x61	; 97
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <main+0x52>
 192:	00 c0       	rjmp	.+0      	; 0x194 <main+0x58>
 194:	00 00       	nop
 196:	8c 2f       	mov	r24, r28
		_delay_ms(100);
		switch(data)
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	fc 01       	movw	r30, r24
 19c:	e1 56       	subi	r30, 0x61	; 97
 19e:	f1 09       	sbc	r31, r1
 1a0:	e5 31       	cpi	r30, 0x15	; 21
 1a2:	f1 05       	cpc	r31, r1
 1a4:	40 f7       	brcc	.-48     	; 0x176 <main+0x3a>
 1a6:	ea 5b       	subi	r30, 0xBA	; 186
 1a8:	ff 4f       	sbci	r31, 0xFF	; 255
 1aa:	c4 c1       	rjmp	.+904    	; 0x534 <__tablejump2__>
		{
			case 'b':	//all on
			setval1A(100);
 1ac:	84 e6       	ldi	r24, 0x64	; 100
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	bb df       	rcall	.-138    	; 0x128 <setval1A>
			setval1B(100);
 1b2:	84 e6       	ldi	r24, 0x64	; 100
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	ae df       	rcall	.-164    	; 0x114 <setval1B>
			setval1C(100);
 1b8:	84 e6       	ldi	r24, 0x64	; 100
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	9f df       	rcall	.-194    	; 0xfc <setval1C>
				break;
 1be:	db cf       	rjmp	.-74     	; 0x176 <main+0x3a>
				
			case 'a':	//all off
			setval1A(0);
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	b1 df       	rcall	.-158    	; 0x128 <setval1A>
			setval1B(0);
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	a4 df       	rcall	.-184    	; 0x114 <setval1B>
			setval1C(0);
 1cc:	80 e0       	ldi	r24, 0x00	; 0
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	95 df       	rcall	.-214    	; 0xfc <setval1C>
			break;
				
			case 'c':	//1 on
			setval1A(100);
 1d2:	d1 cf       	rjmp	.-94     	; 0x176 <main+0x3a>
 1d4:	84 e6       	ldi	r24, 0x64	; 100
 1d6:	90 e0       	ldi	r25, 0x00	; 0
			setval1B(0);
 1d8:	a7 df       	rcall	.-178    	; 0x128 <setval1A>
 1da:	80 e0       	ldi	r24, 0x00	; 0
 1dc:	90 e0       	ldi	r25, 0x00	; 0
			setval1C(0);
 1de:	9a df       	rcall	.-204    	; 0x114 <setval1B>
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	90 e0       	ldi	r25, 0x00	; 0
			break;
				
			case 'd':	//2 on
			setval1A(0);
 1e4:	8b df       	rcall	.-234    	; 0xfc <setval1C>
 1e6:	c7 cf       	rjmp	.-114    	; 0x176 <main+0x3a>
 1e8:	80 e0       	ldi	r24, 0x00	; 0
			setval1B(100);
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	9d df       	rcall	.-198    	; 0x128 <setval1A>
 1ee:	84 e6       	ldi	r24, 0x64	; 100
			setval1C(0);
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	90 df       	rcall	.-224    	; 0x114 <setval1B>
 1f4:	80 e0       	ldi	r24, 0x00	; 0

				break;

			case 'e':	//3 on
			setval1A(0);
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	81 df       	rcall	.-254    	; 0xfc <setval1C>
 1fa:	bd cf       	rjmp	.-134    	; 0x176 <main+0x3a>
			setval1B(0);
 1fc:	80 e0       	ldi	r24, 0x00	; 0
 1fe:	90 e0       	ldi	r25, 0x00	; 0
 200:	93 df       	rcall	.-218    	; 0x128 <setval1A>
			setval1C(100);
 202:	80 e0       	ldi	r24, 0x00	; 0
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	86 df       	rcall	.-244    	; 0x114 <setval1B>
			break;
 208:	84 e6       	ldi	r24, 0x64	; 100

			case 'f':	//1 and 2 on
			setval1A(100);
 20a:	90 e0       	ldi	r25, 0x00	; 0
 20c:	77 df       	rcall	.-274    	; 0xfc <setval1C>
 20e:	b3 cf       	rjmp	.-154    	; 0x176 <main+0x3a>
			setval1B(100);
 210:	84 e6       	ldi	r24, 0x64	; 100
 212:	90 e0       	ldi	r25, 0x00	; 0
 214:	89 df       	rcall	.-238    	; 0x128 <setval1A>
			setval1C(0);
 216:	84 e6       	ldi	r24, 0x64	; 100
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	7c df       	rcall	.-264    	; 0x114 <setval1B>
			break;
 21c:	80 e0       	ldi	r24, 0x00	; 0

			case 'g':	//1 and 3 on
			setval1A(100);
 21e:	90 e0       	ldi	r25, 0x00	; 0
 220:	6d df       	rcall	.-294    	; 0xfc <setval1C>
 222:	a9 cf       	rjmp	.-174    	; 0x176 <main+0x3a>
			setval1B(0);
 224:	84 e6       	ldi	r24, 0x64	; 100
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	7f df       	rcall	.-258    	; 0x128 <setval1A>
			setval1C(100);
 22a:	80 e0       	ldi	r24, 0x00	; 0
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	72 df       	rcall	.-284    	; 0x114 <setval1B>
			break;
 230:	84 e6       	ldi	r24, 0x64	; 100
			
			case 'h':	//2 and 3 on
			setval1A(0);
 232:	90 e0       	ldi	r25, 0x00	; 0
 234:	63 df       	rcall	.-314    	; 0xfc <setval1C>
 236:	9f cf       	rjmp	.-194    	; 0x176 <main+0x3a>
			setval1B(100);
 238:	80 e0       	ldi	r24, 0x00	; 0
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	75 df       	rcall	.-278    	; 0x128 <setval1A>
			setval1C(100);
 23e:	84 e6       	ldi	r24, 0x64	; 100
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	68 df       	rcall	.-304    	; 0x114 <setval1B>
			break;
 244:	84 e6       	ldi	r24, 0x64	; 100

			case 'i':  //1 with 25%
			setval1A(25);
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	59 df       	rcall	.-334    	; 0xfc <setval1C>
 24a:	95 cf       	rjmp	.-214    	; 0x176 <main+0x3a>
			setval1B(0);
 24c:	89 e1       	ldi	r24, 0x19	; 25
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	6b df       	rcall	.-298    	; 0x128 <setval1A>
			setval1C(0);
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	5e df       	rcall	.-324    	; 0x114 <setval1B>
			break;
 258:	80 e0       	ldi	r24, 0x00	; 0
			
			case 'j':  //1 with 75%
			setval1A(75);
 25a:	90 e0       	ldi	r25, 0x00	; 0
 25c:	4f df       	rcall	.-354    	; 0xfc <setval1C>
 25e:	8b cf       	rjmp	.-234    	; 0x176 <main+0x3a>
			setval1B(0);
 260:	8b e4       	ldi	r24, 0x4B	; 75
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	61 df       	rcall	.-318    	; 0x128 <setval1A>
			setval1C(0);
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	54 df       	rcall	.-344    	; 0x114 <setval1B>
			break;
 26c:	80 e0       	ldi	r24, 0x00	; 0
			
			case 'k':  //2 with 25%
			setval1A(0);
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	45 df       	rcall	.-374    	; 0xfc <setval1C>
 272:	81 cf       	rjmp	.-254    	; 0x176 <main+0x3a>
			setval1B(25);
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	57 df       	rcall	.-338    	; 0x128 <setval1A>
			setval1C(0);
 27a:	89 e1       	ldi	r24, 0x19	; 25
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	4a df       	rcall	.-364    	; 0x114 <setval1B>
 280:	80 e0       	ldi	r24, 0x00	; 0
			break;
 282:	90 e0       	ldi	r25, 0x00	; 0

			case 'l':  //2 with 75%
			setval1A(0);
 284:	3b df       	rcall	.-394    	; 0xfc <setval1C>
 286:	77 cf       	rjmp	.-274    	; 0x176 <main+0x3a>
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	90 e0       	ldi	r25, 0x00	; 0
			setval1B(75);
 28c:	4d df       	rcall	.-358    	; 0x128 <setval1A>
 28e:	8b e4       	ldi	r24, 0x4B	; 75
 290:	90 e0       	ldi	r25, 0x00	; 0
			setval1C(0);
 292:	40 df       	rcall	.-384    	; 0x114 <setval1B>
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	90 e0       	ldi	r25, 0x00	; 0
 298:	31 df       	rcall	.-414    	; 0xfc <setval1C>
			break;
 29a:	6d cf       	rjmp	.-294    	; 0x176 <main+0x3a>
			
			case 'm':  //3 with 25%
			setval1A(0);
 29c:	80 e0       	ldi	r24, 0x00	; 0
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	43 df       	rcall	.-378    	; 0x128 <setval1A>
			setval1B(0);
 2a2:	80 e0       	ldi	r24, 0x00	; 0
 2a4:	90 e0       	ldi	r25, 0x00	; 0
 2a6:	36 df       	rcall	.-404    	; 0x114 <setval1B>
 2a8:	89 e1       	ldi	r24, 0x19	; 25
			setval1C(25);
 2aa:	90 e0       	ldi	r25, 0x00	; 0
 2ac:	27 df       	rcall	.-434    	; 0xfc <setval1C>
 2ae:	63 cf       	rjmp	.-314    	; 0x176 <main+0x3a>
			break;
 2b0:	80 e0       	ldi	r24, 0x00	; 0

			case 'n':  //3 with 75%
			setval1A(0);
 2b2:	90 e0       	ldi	r25, 0x00	; 0
 2b4:	39 df       	rcall	.-398    	; 0x128 <setval1A>
 2b6:	80 e0       	ldi	r24, 0x00	; 0
 2b8:	90 e0       	ldi	r25, 0x00	; 0
			setval1B(0);
 2ba:	2c df       	rcall	.-424    	; 0x114 <setval1B>
 2bc:	8b e4       	ldi	r24, 0x4B	; 75
 2be:	90 e0       	ldi	r25, 0x00	; 0
			setval1C(75);
 2c0:	1d df       	rcall	.-454    	; 0xfc <setval1C>
 2c2:	59 cf       	rjmp	.-334    	; 0x176 <main+0x3a>
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
			break;
 2c8:	2f df       	rcall	.-418    	; 0x128 <setval1A>

			case 'o':  //1 off
			setval1A(0);
 2ca:	55 cf       	rjmp	.-342    	; 0x176 <main+0x3a>
 2cc:	00 93 02 01 	sts	0x0102, r16	; 0x800102 <i>
			break;
 2d0:	10 93 03 01 	sts	0x0103, r17	; 0x800103 <i+0x1>

			case 'p': 
			 //dim to high
			 while(1) 
			{	j=1;
				for(i=5;i<=100;i+=5)
 2d4:	80 2f       	mov	r24, r16
 2d6:	91 2f       	mov	r25, r17
 2d8:	c1 e0       	ldi	r28, 0x01	; 1
 2da:	d0 e0       	ldi	r29, 0x00	; 0
 2dc:	c1 30       	cpi	r28, 0x01	; 1
 2de:	d1 05       	cpc	r29, r1
				{	
				if(j==1)
 2e0:	11 f4       	brne	.+4      	; 0x2e6 <main+0x1aa>
 2e2:	22 df       	rcall	.-444    	; 0x128 <setval1A>
 2e4:	12 c0       	rjmp	.+36     	; 0x30a <main+0x1ce>
				setval1A(i);
 2e6:	c2 30       	cpi	r28, 0x02	; 2
 2e8:	d1 05       	cpc	r29, r1
 2ea:	31 f4       	brne	.+12     	; 0x2f8 <main+0x1bc>
				if(j==2)
 2ec:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
 2f0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
				setval1B(i);
 2f4:	0f df       	rcall	.-482    	; 0x114 <setval1B>
 2f6:	12 c0       	rjmp	.+36     	; 0x31c <main+0x1e0>
 2f8:	c3 30       	cpi	r28, 0x03	; 3
 2fa:	d1 05       	cpc	r29, r1
 2fc:	31 f4       	brne	.+12     	; 0x30a <main+0x1ce>
 2fe:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
				if(j==3)
 302:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
				setval1C(i);
 306:	fa de       	rcall	.-524    	; 0xfc <setval1C>
 308:	12 c0       	rjmp	.+36     	; 0x32e <main+0x1f2>
 30a:	c6 30       	cpi	r28, 0x06	; 6
 30c:	d1 05       	cpc	r29, r1
 30e:	31 f4       	brne	.+12     	; 0x31c <main+0x1e0>
 310:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
				if(j==6)
 314:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
 318:	07 df       	rcall	.-498    	; 0x128 <setval1A>
				setval1A(i);
 31a:	12 c0       	rjmp	.+36     	; 0x340 <main+0x204>
 31c:	c5 30       	cpi	r28, 0x05	; 5
 31e:	d1 05       	cpc	r29, r1
 320:	31 f4       	brne	.+12     	; 0x32e <main+0x1f2>
 322:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
				if(j==5)
 326:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
				setval1B(i);
 32a:	f4 de       	rcall	.-536    	; 0x114 <setval1B>
 32c:	0e c0       	rjmp	.+28     	; 0x34a <main+0x20e>
 32e:	c4 30       	cpi	r28, 0x04	; 4
 330:	d1 05       	cpc	r29, r1
 332:	31 f4       	brne	.+12     	; 0x340 <main+0x204>
				if(j==4)
 334:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
				setval1C(i);
 338:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
 33c:	df de       	rcall	.-578    	; 0xfc <setval1C>
 33e:	05 c0       	rjmp	.+10     	; 0x34a <main+0x20e>
 340:	c6 30       	cpi	r28, 0x06	; 6
 342:	d1 05       	cpc	r29, r1
				if(j==6)
 344:	11 f4       	brne	.+4      	; 0x34a <main+0x20e>
 346:	c1 e0       	ldi	r28, 0x01	; 1
				  j=1;
 348:	d0 e0       	ldi	r29, 0x00	; 0
 34a:	21 96       	adiw	r28, 0x01	; 1
				  
				j++;
 34c:	9f e9       	ldi	r25, 0x9F	; 159
 34e:	26 e8       	ldi	r18, 0x86	; 134
 350:	81 e0       	ldi	r24, 0x01	; 1
 352:	91 50       	subi	r25, 0x01	; 1
 354:	20 40       	sbci	r18, 0x00	; 0
 356:	80 40       	sbci	r24, 0x00	; 0
 358:	e1 f7       	brne	.-8      	; 0x352 <main+0x216>
 35a:	00 c0       	rjmp	.+0      	; 0x35c <main+0x220>
 35c:	00 00       	nop

			case 'p': 
			 //dim to high
			 while(1) 
			{	j=1;
				for(i=5;i<=100;i+=5)
 35e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
 362:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
 366:	05 96       	adiw	r24, 0x05	; 5
 368:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <i+0x1>
 36c:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <i>
 370:	85 36       	cpi	r24, 0x65	; 101
 372:	91 05       	cpc	r25, r1
				if(j==6)
				  j=1;
				  
				j++;
				_delay_ms(500);
		}if(UDR0=='x')
 374:	0c f4       	brge	.+2      	; 0x378 <main+0x23c>
 376:	b2 cf       	rjmp	.-156    	; 0x2dc <main+0x1a0>
 378:	8c b1       	in	r24, 0x0c	; 12
 37a:	88 37       	cpi	r24, 0x78	; 120
		{
			setval1A(0);
 37c:	09 f0       	breq	.+2      	; 0x380 <main+0x244>
 37e:	a6 cf       	rjmp	.-180    	; 0x2cc <main+0x190>
 380:	80 e0       	ldi	r24, 0x00	; 0
			setval1B(0);
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	d1 de       	rcall	.-606    	; 0x128 <setval1A>
 386:	80 e0       	ldi	r24, 0x00	; 0
			setval1C(0);
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	c4 de       	rcall	.-632    	; 0x114 <setval1B>
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	90 e0       	ldi	r25, 0x00	; 0
			break;
		}
			}
			break;
 390:	b5 de       	rcall	.-662    	; 0xfc <setval1C>

			case 'q':  //3 off
			setval1C(0);
 392:	f1 ce       	rjmp	.-542    	; 0x176 <main+0x3a>
 394:	80 e0       	ldi	r24, 0x00	; 0
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	b1 de       	rcall	.-670    	; 0xfc <setval1C>
			break;
 39a:	ed ce       	rjmp	.-550    	; 0x176 <main+0x3a>
			
			case 'r':  //2 off
			setval1B(0);
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	90 e0       	ldi	r25, 0x00	; 0
 3a0:	b9 de       	rcall	.-654    	; 0x114 <setval1B>
 3a2:	e9 ce       	rjmp	.-558    	; 0x176 <main+0x3a>
			break;
			
			case 's': //dancing
			while(1)
			{
				setval1A(100);
 3a4:	84 e6       	ldi	r24, 0x64	; 100
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	bf de       	rcall	.-642    	; 0x128 <setval1A>
				setval1B(0);
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	b2 de       	rcall	.-668    	; 0x114 <setval1B>
				setval1C(0);
 3b0:	80 e0       	ldi	r24, 0x00	; 0
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	a3 de       	rcall	.-698    	; 0xfc <setval1C>
 3b6:	9f e3       	ldi	r25, 0x3F	; 63
 3b8:	2d e0       	ldi	r18, 0x0D	; 13
 3ba:	83 e0       	ldi	r24, 0x03	; 3
 3bc:	91 50       	subi	r25, 0x01	; 1
 3be:	20 40       	sbci	r18, 0x00	; 0
 3c0:	80 40       	sbci	r24, 0x00	; 0
 3c2:	e1 f7       	brne	.-8      	; 0x3bc <main+0x280>
				_delay_ms(1000);
				setval1A(0);
 3c4:	00 c0       	rjmp	.+0      	; 0x3c6 <main+0x28a>
 3c6:	00 00       	nop
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	90 e0       	ldi	r25, 0x00	; 0
				setval1B(100);
 3cc:	ad de       	rcall	.-678    	; 0x128 <setval1A>
 3ce:	84 e6       	ldi	r24, 0x64	; 100
 3d0:	90 e0       	ldi	r25, 0x00	; 0
				setval1C(0);
 3d2:	a0 de       	rcall	.-704    	; 0x114 <setval1B>
 3d4:	80 e0       	ldi	r24, 0x00	; 0
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	91 de       	rcall	.-734    	; 0xfc <setval1C>
 3da:	9f e3       	ldi	r25, 0x3F	; 63
 3dc:	2d e0       	ldi	r18, 0x0D	; 13
 3de:	83 e0       	ldi	r24, 0x03	; 3
 3e0:	91 50       	subi	r25, 0x01	; 1
 3e2:	20 40       	sbci	r18, 0x00	; 0
 3e4:	80 40       	sbci	r24, 0x00	; 0
 3e6:	e1 f7       	brne	.-8      	; 0x3e0 <main+0x2a4>
				_delay_ms(1000);
				setval1A(0);
 3e8:	00 c0       	rjmp	.+0      	; 0x3ea <main+0x2ae>
 3ea:	00 00       	nop
 3ec:	80 e0       	ldi	r24, 0x00	; 0
				setval1B(0);
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	9b de       	rcall	.-714    	; 0x128 <setval1A>
 3f2:	80 e0       	ldi	r24, 0x00	; 0
				setval1C(100);
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	8e de       	rcall	.-740    	; 0x114 <setval1B>
 3f8:	84 e6       	ldi	r24, 0x64	; 100
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	7f de       	rcall	.-770    	; 0xfc <setval1C>
 3fe:	9f e3       	ldi	r25, 0x3F	; 63
 400:	2d e0       	ldi	r18, 0x0D	; 13
 402:	83 e0       	ldi	r24, 0x03	; 3
 404:	91 50       	subi	r25, 0x01	; 1
 406:	20 40       	sbci	r18, 0x00	; 0
 408:	80 40       	sbci	r24, 0x00	; 0
 40a:	e1 f7       	brne	.-8      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
				_delay_ms(1000);
				if(UDR0=='x')
 40c:	00 c0       	rjmp	.+0      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40e:	00 00       	nop
 410:	8c b1       	in	r24, 0x0c	; 12
 412:	88 37       	cpi	r24, 0x78	; 120
				{
					setval1A(0);
 414:	09 f0       	breq	.+2      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 416:	c6 cf       	rjmp	.-116    	; 0x3a4 <main+0x268>
 418:	80 e0       	ldi	r24, 0x00	; 0
					setval1B(0);
 41a:	90 e0       	ldi	r25, 0x00	; 0
 41c:	85 de       	rcall	.-758    	; 0x128 <setval1A>
 41e:	80 e0       	ldi	r24, 0x00	; 0
					setval1C(0);
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	78 de       	rcall	.-784    	; 0x114 <setval1B>
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	90 e0       	ldi	r25, 0x00	; 0
					break;
				}
			}
			break;
 428:	69 de       	rcall	.-814    	; 0xfc <setval1C>
			case 't': //disco lights
			
				while(1)
				{
					
					setval1A(100);
 42a:	a5 ce       	rjmp	.-694    	; 0x176 <main+0x3a>
 42c:	84 e6       	ldi	r24, 0x64	; 100
 42e:	90 e0       	ldi	r25, 0x00	; 0
					setval1B(100);
 430:	7b de       	rcall	.-778    	; 0x128 <setval1A>
 432:	84 e6       	ldi	r24, 0x64	; 100
 434:	90 e0       	ldi	r25, 0x00	; 0
					setval1C(0);
 436:	6e de       	rcall	.-804    	; 0x114 <setval1B>
 438:	80 e0       	ldi	r24, 0x00	; 0
 43a:	90 e0       	ldi	r25, 0x00	; 0
 43c:	5f de       	rcall	.-834    	; 0xfc <setval1C>
 43e:	9f e3       	ldi	r25, 0x3F	; 63
 440:	2d e0       	ldi	r18, 0x0D	; 13
 442:	83 e0       	ldi	r24, 0x03	; 3
 444:	91 50       	subi	r25, 0x01	; 1
 446:	20 40       	sbci	r18, 0x00	; 0
 448:	80 40       	sbci	r24, 0x00	; 0
 44a:	e1 f7       	brne	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 44c:	00 c0       	rjmp	.+0      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
					_delay_ms(1000);
					setval1A(0);
 44e:	00 00       	nop
 450:	80 e0       	ldi	r24, 0x00	; 0
 452:	90 e0       	ldi	r25, 0x00	; 0
 454:	69 de       	rcall	.-814    	; 0x128 <setval1A>
					setval1B(100);
 456:	84 e6       	ldi	r24, 0x64	; 100
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	5c de       	rcall	.-840    	; 0x114 <setval1B>
 45c:	84 e6       	ldi	r24, 0x64	; 100
					setval1C(100);
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	4d de       	rcall	.-870    	; 0xfc <setval1C>
 462:	9f e3       	ldi	r25, 0x3F	; 63
 464:	2d e0       	ldi	r18, 0x0D	; 13
 466:	83 e0       	ldi	r24, 0x03	; 3
 468:	91 50       	subi	r25, 0x01	; 1
 46a:	20 40       	sbci	r18, 0x00	; 0
 46c:	80 40       	sbci	r24, 0x00	; 0
 46e:	e1 f7       	brne	.-8      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 470:	00 c0       	rjmp	.+0      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
					_delay_ms(1000);
					setval1A(100);
 472:	00 00       	nop
 474:	84 e6       	ldi	r24, 0x64	; 100
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	57 de       	rcall	.-850    	; 0x128 <setval1A>
					setval1B(0);
 47a:	80 e0       	ldi	r24, 0x00	; 0
 47c:	90 e0       	ldi	r25, 0x00	; 0
 47e:	4a de       	rcall	.-876    	; 0x114 <setval1B>
 480:	84 e6       	ldi	r24, 0x64	; 100
					setval1C(100);
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	3b de       	rcall	.-906    	; 0xfc <setval1C>
 486:	9f e3       	ldi	r25, 0x3F	; 63
 488:	2d e0       	ldi	r18, 0x0D	; 13
 48a:	83 e0       	ldi	r24, 0x03	; 3
 48c:	91 50       	subi	r25, 0x01	; 1
 48e:	20 40       	sbci	r18, 0x00	; 0
 490:	80 40       	sbci	r24, 0x00	; 0
 492:	e1 f7       	brne	.-8      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 494:	00 c0       	rjmp	.+0      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
					_delay_ms(1000);
					if(UDR0=='x')
 496:	00 00       	nop
 498:	8c b1       	in	r24, 0x0c	; 12
 49a:	88 37       	cpi	r24, 0x78	; 120
 49c:	09 f0       	breq	.+2      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
					{
						setval1A(0);
 49e:	c6 cf       	rjmp	.-116    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 4a0:	80 e0       	ldi	r24, 0x00	; 0
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	41 de       	rcall	.-894    	; 0x128 <setval1A>
						setval1B(0);
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	90 e0       	ldi	r25, 0x00	; 0
 4aa:	34 de       	rcall	.-920    	; 0x114 <setval1B>
 4ac:	80 e0       	ldi	r24, 0x00	; 0
						setval1C(0);
 4ae:	90 e0       	ldi	r25, 0x00	; 0
 4b0:	25 de       	rcall	.-950    	; 0xfc <setval1C>
 4b2:	61 ce       	rjmp	.-830    	; 0x176 <main+0x3a>
 4b4:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <i+0x1>
					
			case 'u':    //mode 1
			
				while(1)
				{
					for(i=0;i<101;i++)
 4b8:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <i>
 4bc:	80 e0       	ldi	r24, 0x00	; 0
 4be:	90 e0       	ldi	r25, 0x00	; 0
 4c0:	33 de       	rcall	.-922    	; 0x128 <setval1A>
 4c2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
					{
					setval1A(i);
 4c6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
					setval1B(i);
 4ca:	24 de       	rcall	.-952    	; 0x114 <setval1B>
 4cc:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
 4d0:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
					setval1C(i);
 4d4:	13 de       	rcall	.-986    	; 0xfc <setval1C>
 4d6:	87 ea       	ldi	r24, 0xA7	; 167
 4d8:	91 e6       	ldi	r25, 0x61	; 97
 4da:	01 97       	sbiw	r24, 0x01	; 1
 4dc:	f1 f7       	brne	.-4      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4de:	00 c0       	rjmp	.+0      	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4e0:	00 00       	nop
 4e2:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <i>
 4e6:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <i+0x1>
 4ea:	01 96       	adiw	r24, 0x01	; 1
					
			case 'u':    //mode 1
			
				while(1)
				{
					for(i=0;i<101;i++)
 4ec:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <i+0x1>
 4f0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <i>
 4f4:	85 36       	cpi	r24, 0x65	; 101
 4f6:	91 05       	cpc	r25, r1
 4f8:	1c f3       	brlt	.-58     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4fa:	c4 e6       	ldi	r28, 0x64	; 100
 4fc:	d0 e0       	ldi	r29, 0x00	; 0
 4fe:	ce 01       	movw	r24, r28
 500:	13 de       	rcall	.-986    	; 0x128 <setval1A>
 502:	ce 01       	movw	r24, r28
 504:	07 de       	rcall	.-1010   	; 0x114 <setval1B>
 506:	ce 01       	movw	r24, r28
					setval1C(i);
					_delay_ms(100);
					}
					for(j=100;j>=0;j--)
					{
						setval1A(j);
 508:	f9 dd       	rcall	.-1038   	; 0xfc <setval1C>
 50a:	87 ea       	ldi	r24, 0xA7	; 167
 50c:	91 e6       	ldi	r25, 0x61	; 97
						setval1B(j);
 50e:	01 97       	sbiw	r24, 0x01	; 1
 510:	f1 f7       	brne	.-4      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 512:	00 c0       	rjmp	.+0      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
						setval1C(j);
 514:	00 00       	nop
 516:	21 97       	sbiw	r28, 0x01	; 1
 518:	90 f7       	brcc	.-28     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 51a:	8c b1       	in	r24, 0x0c	; 12
 51c:	88 37       	cpi	r24, 0x78	; 120
 51e:	51 f6       	brne	.-108    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 520:	80 e0       	ldi	r24, 0x00	; 0
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	01 de       	rcall	.-1022   	; 0x128 <setval1A>
					setval1A(i);
					setval1B(i);
					setval1C(i);
					_delay_ms(100);
					}
					for(j=100;j>=0;j--)
 526:	80 e0       	ldi	r24, 0x00	; 0
 528:	90 e0       	ldi	r25, 0x00	; 0
						setval1A(j);
						setval1B(j);
						setval1C(j);
						_delay_ms(100);
					}
					if(UDR0=='x')
 52a:	f4 dd       	rcall	.-1048   	; 0x114 <setval1B>
 52c:	80 e0       	ldi	r24, 0x00	; 0
 52e:	90 e0       	ldi	r25, 0x00	; 0
					{
						setval1A(0);
 530:	e5 dd       	rcall	.-1078   	; 0xfc <setval1C>
 532:	21 ce       	rjmp	.-958    	; 0x176 <main+0x3a>

00000534 <__tablejump2__>:
 534:	ee 0f       	add	r30, r30
 536:	ff 1f       	adc	r31, r31
						setval1B(0);
 538:	00 24       	eor	r0, r0
 53a:	00 1c       	adc	r0, r0
 53c:	0b be       	out	0x3b, r0	; 59
 53e:	07 90       	elpm	r0, Z+
						setval1C(0);
 540:	f6 91       	elpm	r31, Z
 542:	e0 2d       	mov	r30, r0
 544:	09 94       	ijmp

00000546 <_exit>:
 546:	f8 94       	cli

00000548 <__stop_program>:
						break;
					}
				}	
				break;
 548:	ff cf       	rjmp	.-2      	; 0x548 <__stop_program>
